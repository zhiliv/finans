/* eslint-disable prefer-const */
import * as fs from 'fs'
import { globby } from 'globby'
import {listClass} from './list-class.mjs' // –∫–ª–∞—Å—Å—ã –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏
import {requiredClass} from './required-class.mjs' // –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã–µ –∫–ª–∞—Å—Å—ã, –∫–æ—Ç–æ—Ä—ã–µ –Ω–µ –±—É–¥—É—Ç —É–¥–∞–ª—è—Ç—å—Å—è
const listPath = ['./pages/*.vue', './pages/**/*.vue', './pages/**/**/*.vue', './pages/modal/**/*.vue', './pages/modal/**/**/*.vue', './layouts/*.vue'] // —Å–ø–∏—Å–æ–∫ –ø–∞–ø–æ–∫ –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏

export const getWhiteList = async () => {
  let whitelist = [...requiredClass] // –¥–æ–±–∞–≤–ª–µ–Ω–∏–µ –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã –∫–ª–∞—Å—Å–æ–≤
  let i = 0 // –ø–µ—Ä–µ–º–µ–Ω–Ω–∞—è –¥–ª—è —Å—á–µ—Ç—á–∏–∫–∞
  for await (const namePath of listPath) { // –∞—Å—Å–∏–Ω—Ö—Ä–æ–Ω–Ω—ã–π –æ–±—Ö–æ–¥ —Å–ø–∏—Å–∫–∞ –∫–∞—Ç–∞–ª–æ–≥–æ–≤
    // –æ–±—Ö–æ–¥ —É–∫–∞–∑–∞–Ω–Ω—ã—Ö –ø–∞–ø–æ–∫
    const paths = await globby(namePath) // –ø–æ–ª—É—á–µ–Ω–∏–µ –≤—Å–µ—Ö —Ñ–∞–π–ª–æ–≤ vue –≤ –ø–∞–ø–∫–µ
    for await (const fileName of paths) {
      const data = await fs.readFileSync(fileName).toString() // —á—Ç–µ–Ω–∏–µ vue —Ñ–∞–π–ª–∞
      console.log('üöÄ -> forawait -> data', data)
      for (let key in listClass) {
        let getData = data.match(/<template>(.*?)<\/template>/g)
        console.log('üöÄ -> forawait -> getData', getData)
        /* if (listClass[key].test(data) && !whitelist.find(wl => wl === key)) { // –µ—Å–ª–∏ –≤ —Ñ–∞–π–ª–µ —Å–æ–¥–µ—Ä–∂–∏—Ç—Å—è –ø—Ä–æ–≤–µ—Ä—è–µ–º—ã–π –∫–ª–∞—Å—Å
          whitelist.push(key) // –¥–æ–±–∞–≤–ª–µ–Ω–∏–µ –≤ –º–∞—Å—Å–∏–≤ –∫–ª–∞—Å—Å–∞ –±–µ–ª–æ–≥–æ —Å–ø–∏—Å–∫–∞
        } */
      }
    }

    i++
    if (i === listPath.length) {
      // await fs.writeFileSync('./scripts/whitelist/whitelist.json', JSON.stringify(whitelist))
      console.log('‚àö –ë–µ–ª—ã–π —Å–ø–∏—Å–æ–∫ –∫–ª–∞—Å—Å–æ–≤ —Å—Ñ–æ—Ä–º–∏—Ä–æ–≤–∞–Ω')
    }
  }
}

getWhiteList()